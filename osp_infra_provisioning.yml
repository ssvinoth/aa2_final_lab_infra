---
- name: Create OpenStack Instances
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    guid: "{{ lookup('ENV','GUID') }}"
  tasks:
    - name: Include Instance variables
      include_vars: instances_vars.yml

    - name: Create Server Instance
      openstack.cloud.server:
        cloud: "{{ guid }}-project"
        name: "{{ instance.name }}"
        image: "{{ instance.image }}"
        key_name: "{{ instance.keypair }}"
        flavor: "{{ instance.flavor }}"
        security_groups: "{{ instance.security_group }}"
        delete_fip: yes
        wait: no
        nics:
          - net-name: "{{ instance.internal_network }}"
        meta: "AnsibleGroup={{instance.metadata.AnsibleGroup}},deployment_name={{instance.metadata.deployment_name}},server_type={{instance.metadata.server_type}}"
        userdata: |
          #!/bin/bash
          echo "Created as part of cloud-init/userdata" > /tmp/cloud-userdata        
      loop: "{{ instances }}"
      loop_control:
        loop_var: instance

- name: configure osp server instances
  hosts: all
  vars:
    satellite_activationkey: gpte-labs-rhel8
    satellite_org: prod
  become: yes
  become_method: sudo
  become_user: root
  tasks:
# **** DNS UPDATE **** #
  
    # Get the controller (localhost) network info to find the dns ip
    - name : Gather network facts
      become: no
      setup:
        gather_subset:
          - 'network'
      delegate_facts: true
      delegate_to: localhost
      connection: local
    # Lets updat the DNS IP in the target node
    - name: DNS IP updated
      lineinfile:
        state: present
        path: /etc/sysconfig/network-scripts/ifcfg-eth0
        line: "{{ item }}"
      loop:
        - PEERDNS=no
        - DNS1={{ hostvars.localhost.ansible_default_ipv4.address }}
      register: network_update
    # Restart the network Manager 
    - name: Restart the network manager service
      service:
        name: NetworkManager
        state: restarted
      when: network_update.changed | bool


  # **** END DNS UPDATE **** #
  # **** Subscribe to Satellite Server **** #
    # Install the Katello-ca-consumer package 
    - name: Install Katello-ca-consumer package
      dnf:
        name: http://satellite.example.com/pub/katello-ca-consumer-latest.noarch.rpm
        state: present
        disable_gpg_check: true
      
    # Register using subscription manager
    - name: Register the node with satellite
      redhat_subscription:
        #server_hostname: satellite.example.com
        org_id: "{{ satellite_org }}"
        activationkey: "{{ satellite_activationkey }}"
        auto_attach: true
        state: present
  # **** END Subscribe to Satellite Server **** #
  # **** Install and Configure firewalld **** #
    - name: Install and configure firewall
      dnf:
        name: firewalld
        state: present

  # **** END Install and Configure firewalld **** #
